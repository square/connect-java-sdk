/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.Money;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Represents an applied portion of a tax to a line item in an order.  Order-scoped taxes automatically include the applied taxes in each line item. Line item taxes must be referenced from any applicable line items. The corresponding applied money is automatically computed, based on the set of participating line items.
 */
@ApiModel(description = "Represents an applied portion of a tax to a line item in an order.  Order-scoped taxes automatically include the applied taxes in each line item. Line item taxes must be referenced from any applicable line items. The corresponding applied money is automatically computed, based on the set of participating line items.")

public class OrderLineItemAppliedTax {
  @JsonProperty("uid")
  private String uid = null;

  @JsonProperty("tax_uid")
  private String taxUid = null;

  @JsonProperty("applied_money")
  private Money appliedMoney = null;

  public OrderLineItemAppliedTax uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Unique ID that identifies the applied tax only within this order.
   * @return uid
  **/
  @ApiModelProperty(value = "Unique ID that identifies the applied tax only within this order.")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public OrderLineItemAppliedTax taxUid(String taxUid) {
    this.taxUid = taxUid;
    return this;
  }

   /**
   * The `uid` of the tax for which this applied tax represents.  Must reference a tax present in the `order.taxes` field.  This field is immutable. To change which taxes apply to a line item, delete and add new `OrderLineItemAppliedTax`s.
   * @return taxUid
  **/
  @ApiModelProperty(required = true, value = "The `uid` of the tax for which this applied tax represents.  Must reference a tax present in the `order.taxes` field.  This field is immutable. To change which taxes apply to a line item, delete and add new `OrderLineItemAppliedTax`s.")
  public String getTaxUid() {
    return taxUid;
  }

  public void setTaxUid(String taxUid) {
    this.taxUid = taxUid;
  }

  public OrderLineItemAppliedTax appliedMoney(Money appliedMoney) {
    this.appliedMoney = appliedMoney;
    return this;
  }

   /**
   * The amount of money applied by the tax to the line item.
   * @return appliedMoney
  **/
  @ApiModelProperty(value = "The amount of money applied by the tax to the line item.")
  public Money getAppliedMoney() {
    return appliedMoney;
  }

  public void setAppliedMoney(Money appliedMoney) {
    this.appliedMoney = appliedMoney;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderLineItemAppliedTax orderLineItemAppliedTax = (OrderLineItemAppliedTax) o;
    return Objects.equals(this.uid, orderLineItemAppliedTax.uid) &&
        Objects.equals(this.taxUid, orderLineItemAppliedTax.taxUid) &&
        Objects.equals(this.appliedMoney, orderLineItemAppliedTax.appliedMoney);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uid, taxUid, appliedMoney);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderLineItemAppliedTax {\n");
    
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    taxUid: ").append(toIndentedString(taxUid)).append("\n");
    sb.append("    appliedMoney: ").append(toIndentedString(appliedMoney)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

