/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.Error;
import com.squareup.connect.models.InventoryChange;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * 
 */
@ApiModel(description = "")

public class BatchRetrieveInventoryChangesResponse {
  @JsonProperty("errors")
  private List<Error> errors = new ArrayList<Error>();

  @JsonProperty("changes")
  private List<InventoryChange> changes = new ArrayList<InventoryChange>();

  @JsonProperty("cursor")
  private String cursor = null;

  public BatchRetrieveInventoryChangesResponse errors(List<Error> errors) {
    this.errors = errors;
    return this;
  }

  public BatchRetrieveInventoryChangesResponse addErrorsItem(Error errorsItem) {
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Any errors that occurred during the request.
   * @return errors
  **/
  @ApiModelProperty(value = "Any errors that occurred during the request.")
  public List<Error> getErrors() {
    return errors;
  }

  public void setErrors(List<Error> errors) {
    this.errors = errors;
  }

  public BatchRetrieveInventoryChangesResponse changes(List<InventoryChange> changes) {
    this.changes = changes;
    return this;
  }

  public BatchRetrieveInventoryChangesResponse addChangesItem(InventoryChange changesItem) {
    this.changes.add(changesItem);
    return this;
  }

   /**
   * The current calculated inventory changes for the requested objects and locations.
   * @return changes
  **/
  @ApiModelProperty(value = "The current calculated inventory changes for the requested objects and locations.")
  public List<InventoryChange> getChanges() {
    return changes;
  }

  public void setChanges(List<InventoryChange> changes) {
    this.changes = changes;
  }

  public BatchRetrieveInventoryChangesResponse cursor(String cursor) {
    this.cursor = cursor;
    return this;
  }

   /**
   * The pagination cursor to be used in a subsequent request. If unset, this is the final response. See [Paginating results](#paginatingresults) for more information.
   * @return cursor
  **/
  @ApiModelProperty(value = "The pagination cursor to be used in a subsequent request. If unset, this is the final response. See [Paginating results](#paginatingresults) for more information.")
  public String getCursor() {
    return cursor;
  }

  public void setCursor(String cursor) {
    this.cursor = cursor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchRetrieveInventoryChangesResponse batchRetrieveInventoryChangesResponse = (BatchRetrieveInventoryChangesResponse) o;
    return Objects.equals(this.errors, batchRetrieveInventoryChangesResponse.errors) &&
        Objects.equals(this.changes, batchRetrieveInventoryChangesResponse.changes) &&
        Objects.equals(this.cursor, batchRetrieveInventoryChangesResponse.cursor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errors, changes, cursor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchRetrieveInventoryChangesResponse {\n");
    
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    changes: ").append(toIndentedString(changes)).append("\n");
    sb.append("    cursor: ").append(toIndentedString(cursor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

