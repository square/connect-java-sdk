/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.Address;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Contains information on the recipient of a fulfillment.
 */
@ApiModel(description = "Contains information on the recipient of a fulfillment.")

public class OrderFulfillmentRecipient {
  @JsonProperty("customer_id")
  private String customerId = null;

  @JsonProperty("display_name")
  private String displayName = null;

  @JsonProperty("email_address")
  private String emailAddress = null;

  @JsonProperty("phone_number")
  private String phoneNumber = null;

  @JsonProperty("address")
  private Address address = null;

  public OrderFulfillmentRecipient customerId(String customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * The Customer ID of the customer associated with the fulfillment.  If `customer_id` is provided, the fulfillment recipient's `display_name`, `email_address`, and `phone_number` are automatically populated from the targeted customer profile. If these fields are set in the request, the request values will override the information from the customer profile. If the targeted customer profile does not contain the necessary information and these fields are left unset, the request will result in an error.
   * @return customerId
  **/
  @ApiModelProperty(value = "The Customer ID of the customer associated with the fulfillment.  If `customer_id` is provided, the fulfillment recipient's `display_name`, `email_address`, and `phone_number` are automatically populated from the targeted customer profile. If these fields are set in the request, the request values will override the information from the customer profile. If the targeted customer profile does not contain the necessary information and these fields are left unset, the request will result in an error.")
  public String getCustomerId() {
    return customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }

  public OrderFulfillmentRecipient displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by `customer_id`.
   * @return displayName
  **/
  @ApiModelProperty(value = "The display name of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by `customer_id`.")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public OrderFulfillmentRecipient emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * The email address of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by `customer_id`.
   * @return emailAddress
  **/
  @ApiModelProperty(value = "The email address of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by `customer_id`.")
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

  public OrderFulfillmentRecipient phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The phone number of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by `customer_id`.
   * @return phoneNumber
  **/
  @ApiModelProperty(value = "The phone number of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by `customer_id`.")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public OrderFulfillmentRecipient address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * The address of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by `customer_id`.
   * @return address
  **/
  @ApiModelProperty(value = "The address of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by `customer_id`.")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderFulfillmentRecipient orderFulfillmentRecipient = (OrderFulfillmentRecipient) o;
    return Objects.equals(this.customerId, orderFulfillmentRecipient.customerId) &&
        Objects.equals(this.displayName, orderFulfillmentRecipient.displayName) &&
        Objects.equals(this.emailAddress, orderFulfillmentRecipient.emailAddress) &&
        Objects.equals(this.phoneNumber, orderFulfillmentRecipient.phoneNumber) &&
        Objects.equals(this.address, orderFulfillmentRecipient.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, displayName, emailAddress, phoneNumber, address);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderFulfillmentRecipient {\n");
    
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

