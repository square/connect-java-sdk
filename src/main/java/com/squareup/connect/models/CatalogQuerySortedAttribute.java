/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * 
 */
@ApiModel(description = "")

public class CatalogQuerySortedAttribute {
  @JsonProperty("attribute_name")
  private String attributeName = null;

  @JsonProperty("initial_attribute_value")
  private String initialAttributeValue = null;

  /**
   * The desired [SortOrder](#type-sortorder), `\"ASC\"` (ascending) or `\"DESC\"` (descending).
   */
  public enum SortOrderEnum {
    DESC("DESC"),
    
    ASC("ASC");

    private String value;

    SortOrderEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SortOrderEnum fromValue(String text) {
      for (SortOrderEnum b : SortOrderEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("sort_order")
  private SortOrderEnum sortOrder = null;

  public CatalogQuerySortedAttribute attributeName(String attributeName) {
    this.attributeName = attributeName;
    return this;
  }

   /**
   * The attribute whose value should be used as the sort key.
   * @return attributeName
  **/
  @ApiModelProperty(required = true, value = "The attribute whose value should be used as the sort key.")
  public String getAttributeName() {
    return attributeName;
  }

  public void setAttributeName(String attributeName) {
    this.attributeName = attributeName;
  }

  public CatalogQuerySortedAttribute initialAttributeValue(String initialAttributeValue) {
    this.initialAttributeValue = initialAttributeValue;
    return this;
  }

   /**
   * The first attribute value to be returned by the query. Ascending sorts will return only objects with this value or greater, while descending sorts will return only objects with this value or less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts).
   * @return initialAttributeValue
  **/
  @ApiModelProperty(value = "The first attribute value to be returned by the query. Ascending sorts will return only objects with this value or greater, while descending sorts will return only objects with this value or less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts).")
  public String getInitialAttributeValue() {
    return initialAttributeValue;
  }

  public void setInitialAttributeValue(String initialAttributeValue) {
    this.initialAttributeValue = initialAttributeValue;
  }

  public CatalogQuerySortedAttribute sortOrder(SortOrderEnum sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * The desired [SortOrder](#type-sortorder), `\"ASC\"` (ascending) or `\"DESC\"` (descending).
   * @return sortOrder
  **/
  @ApiModelProperty(value = "The desired [SortOrder](#type-sortorder), `\"ASC\"` (ascending) or `\"DESC\"` (descending).")
  public SortOrderEnum getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(SortOrderEnum sortOrder) {
    this.sortOrder = sortOrder;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogQuerySortedAttribute catalogQuerySortedAttribute = (CatalogQuerySortedAttribute) o;
    return Objects.equals(this.attributeName, catalogQuerySortedAttribute.attributeName) &&
        Objects.equals(this.initialAttributeValue, catalogQuerySortedAttribute.initialAttributeValue) &&
        Objects.equals(this.sortOrder, catalogQuerySortedAttribute.sortOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeName, initialAttributeValue, sortOrder);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogQuerySortedAttribute {\n");
    
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    initialAttributeValue: ").append(toIndentedString(initialAttributeValue)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

