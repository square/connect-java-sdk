/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.Address;
import com.squareup.connect.models.BusinessHours;
import com.squareup.connect.models.Coordinates;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents one of a business&#39;s locations.
 */
@ApiModel(description = "Represents one of a business's locations.")

public class Location {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("address")
  private Address address = null;

  @JsonProperty("timezone")
  private String timezone = null;

  @JsonProperty("capabilities")
  private List<String> capabilities = new ArrayList<String>();

  @JsonProperty("status")
  private String status = null;

  @JsonProperty("created_at")
  private String createdAt = null;

  @JsonProperty("merchant_id")
  private String merchantId = null;

  @JsonProperty("country")
  private String country = null;

  @JsonProperty("language_code")
  private String languageCode = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("phone_number")
  private String phoneNumber = null;

  @JsonProperty("business_name")
  private String businessName = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("website_url")
  private String websiteUrl = null;

  @JsonProperty("business_hours")
  private BusinessHours businessHours = null;

  @JsonProperty("business_email")
  private String businessEmail = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("twitter_username")
  private String twitterUsername = null;

  @JsonProperty("instagram_username")
  private String instagramUsername = null;

  @JsonProperty("facebook_url")
  private String facebookUrl = null;

  @JsonProperty("coordinates")
  private Coordinates coordinates = null;

  @JsonProperty("logo_url")
  private String logoUrl = null;

  @JsonProperty("pos_background_url")
  private String posBackgroundUrl = null;

  public Location id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The location's unique ID.
   * @return id
  **/
  @ApiModelProperty(value = "The location's unique ID.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Location name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The location's name. Location names are set by the account owner and displayed in the dashboard as the location's nickname
   * @return name
  **/
  @ApiModelProperty(value = "The location's name. Location names are set by the account owner and displayed in the dashboard as the location's nickname")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Location address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * The location's physical address.
   * @return address
  **/
  @ApiModelProperty(value = "The location's physical address.")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public Location timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * The [IANA Timezone Database](https://www.iana.org/time-zones) identifier for the location's timezone.
   * @return timezone
  **/
  @ApiModelProperty(value = "The [IANA Timezone Database](https://www.iana.org/time-zones) identifier for the location's timezone.")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public Location capabilities(List<String> capabilities) {
    this.capabilities = capabilities;
    return this;
  }

  public Location addCapabilitiesItem(String capabilitiesItem) {
    this.capabilities.add(capabilitiesItem);
    return this;
  }

   /**
   * Indicates which Square features are enabled for the location. See [LocationCapability](#type-locationcapability) for possible values
   * @return capabilities
  **/
  @ApiModelProperty(value = "Indicates which Square features are enabled for the location. See [LocationCapability](#type-locationcapability) for possible values")
  public List<String> getCapabilities() {
    return capabilities;
  }

  public void setCapabilities(List<String> capabilities) {
    this.capabilities = capabilities;
  }

  public Location status(String status) {
    this.status = status;
    return this;
  }

   /**
   * The location's status See [LocationStatus](#type-locationstatus) for possible values
   * @return status
  **/
  @ApiModelProperty(value = "The location's status See [LocationStatus](#type-locationstatus) for possible values")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Location createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The time when the location was created, in RFC 3339 format.
   * @return createdAt
  **/
  @ApiModelProperty(value = "The time when the location was created, in RFC 3339 format.")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Location merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * The identifier of the merchant that owns the location.
   * @return merchantId
  **/
  @ApiModelProperty(value = "The identifier of the merchant that owns the location.")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public Location country(String country) {
    this.country = country;
    return this;
  }

   /**
   * The location's country, in ISO 3166-1-alpha-2 format. See [Country](#type-country) for possible values
   * @return country
  **/
  @ApiModelProperty(value = "The location's country, in ISO 3166-1-alpha-2 format. See [Country](#type-country) for possible values")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public Location languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

   /**
   * The language associated with the location in [BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A).
   * @return languageCode
  **/
  @ApiModelProperty(value = "The language associated with the location in [BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A).")
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }

  public Location currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * The currency used for all transactions at this location, specified in __ISO 4217 format__. For example, the currency for a location processing transactions in the United States is 'USD'. See [Currency](#type-currency) for possible values
   * @return currency
  **/
  @ApiModelProperty(value = "The currency used for all transactions at this location, specified in __ISO 4217 format__. For example, the currency for a location processing transactions in the United States is 'USD'. See [Currency](#type-currency) for possible values")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Location phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The location's phone_number.
   * @return phoneNumber
  **/
  @ApiModelProperty(value = "The location's phone_number.")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public Location businessName(String businessName) {
    this.businessName = businessName;
    return this;
  }

   /**
   * The location's business_name which is shown to its customers. For example, this is the name printed on its customer's receipts.
   * @return businessName
  **/
  @ApiModelProperty(value = "The location's business_name which is shown to its customers. For example, this is the name printed on its customer's receipts.")
  public String getBusinessName() {
    return businessName;
  }

  public void setBusinessName(String businessName) {
    this.businessName = businessName;
  }

  public Location type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The location's type, as set by the account owner in the Square dashboard. Typically used to indicate whether or not the location object represents a physical space like a building or mall space. See [LocationType](#type-locationtype) for possible values
   * @return type
  **/
  @ApiModelProperty(value = "The location's type, as set by the account owner in the Square dashboard. Typically used to indicate whether or not the location object represents a physical space like a building or mall space. See [LocationType](#type-locationtype) for possible values")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Location websiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

   /**
   * The location's website, as set by the account owner in the Square dashboard.  Default: none; only exists if explicitly set.
   * @return websiteUrl
  **/
  @ApiModelProperty(value = "The location's website, as set by the account owner in the Square dashboard.  Default: none; only exists if explicitly set.")
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }

  public Location businessHours(BusinessHours businessHours) {
    this.businessHours = businessHours;
    return this;
  }

   /**
   *   The hours of operation for a business location.  Default: none; only exists if explicitly set.
   * @return businessHours
  **/
  @ApiModelProperty(value = "  The hours of operation for a business location.  Default: none; only exists if explicitly set.")
  public BusinessHours getBusinessHours() {
    return businessHours;
  }

  public void setBusinessHours(BusinessHours businessHours) {
    this.businessHours = businessHours;
  }

  public Location businessEmail(String businessEmail) {
    this.businessEmail = businessEmail;
    return this;
  }

   /**
   * The email of the location.
   * @return businessEmail
  **/
  @ApiModelProperty(value = "The email of the location.")
  public String getBusinessEmail() {
    return businessEmail;
  }

  public void setBusinessEmail(String businessEmail) {
    this.businessEmail = businessEmail;
  }

  public Location description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The business description of the location.
   * @return description
  **/
  @ApiModelProperty(value = "The business description of the location.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Location twitterUsername(String twitterUsername) {
    this.twitterUsername = twitterUsername;
    return this;
  }

   /**
   * The Twitter username of the location without the '
   * @return twitterUsername
  **/
  @ApiModelProperty(value = "The Twitter username of the location without the '")
  public String getTwitterUsername() {
    return twitterUsername;
  }

  public void setTwitterUsername(String twitterUsername) {
    this.twitterUsername = twitterUsername;
  }

  public Location instagramUsername(String instagramUsername) {
    this.instagramUsername = instagramUsername;
    return this;
  }

   /**
   * The Instagram username of the location without the '
   * @return instagramUsername
  **/
  @ApiModelProperty(value = "The Instagram username of the location without the '")
  public String getInstagramUsername() {
    return instagramUsername;
  }

  public void setInstagramUsername(String instagramUsername) {
    this.instagramUsername = instagramUsername;
  }

  public Location facebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
    return this;
  }

   /**
   * The Facebook profile URL of the location. The URL should begin with 'facebook.com/'.
   * @return facebookUrl
  **/
  @ApiModelProperty(value = "The Facebook profile URL of the location. The URL should begin with 'facebook.com/'.")
  public String getFacebookUrl() {
    return facebookUrl;
  }

  public void setFacebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
  }

  public Location coordinates(Coordinates coordinates) {
    this.coordinates = coordinates;
    return this;
  }

   /**
   * The physical coordinates (latitude and longitude) of the location.
   * @return coordinates
  **/
  @ApiModelProperty(value = "The physical coordinates (latitude and longitude) of the location.")
  public Coordinates getCoordinates() {
    return coordinates;
  }

  public void setCoordinates(Coordinates coordinates) {
    this.coordinates = coordinates;
  }

  public Location logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

   /**
   * The logo image URL of the location.
   * @return logoUrl
  **/
  @ApiModelProperty(value = "The logo image URL of the location.")
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }

  public Location posBackgroundUrl(String posBackgroundUrl) {
    this.posBackgroundUrl = posBackgroundUrl;
    return this;
  }

   /**
   * The Point of Sale background image URL of the location.
   * @return posBackgroundUrl
  **/
  @ApiModelProperty(value = "The Point of Sale background image URL of the location.")
  public String getPosBackgroundUrl() {
    return posBackgroundUrl;
  }

  public void setPosBackgroundUrl(String posBackgroundUrl) {
    this.posBackgroundUrl = posBackgroundUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Location location = (Location) o;
    return Objects.equals(this.id, location.id) &&
        Objects.equals(this.name, location.name) &&
        Objects.equals(this.address, location.address) &&
        Objects.equals(this.timezone, location.timezone) &&
        Objects.equals(this.capabilities, location.capabilities) &&
        Objects.equals(this.status, location.status) &&
        Objects.equals(this.createdAt, location.createdAt) &&
        Objects.equals(this.merchantId, location.merchantId) &&
        Objects.equals(this.country, location.country) &&
        Objects.equals(this.languageCode, location.languageCode) &&
        Objects.equals(this.currency, location.currency) &&
        Objects.equals(this.phoneNumber, location.phoneNumber) &&
        Objects.equals(this.businessName, location.businessName) &&
        Objects.equals(this.type, location.type) &&
        Objects.equals(this.websiteUrl, location.websiteUrl) &&
        Objects.equals(this.businessHours, location.businessHours) &&
        Objects.equals(this.businessEmail, location.businessEmail) &&
        Objects.equals(this.description, location.description) &&
        Objects.equals(this.twitterUsername, location.twitterUsername) &&
        Objects.equals(this.instagramUsername, location.instagramUsername) &&
        Objects.equals(this.facebookUrl, location.facebookUrl) &&
        Objects.equals(this.coordinates, location.coordinates) &&
        Objects.equals(this.logoUrl, location.logoUrl) &&
        Objects.equals(this.posBackgroundUrl, location.posBackgroundUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, address, timezone, capabilities, status, createdAt, merchantId, country, languageCode, currency, phoneNumber, businessName, type, websiteUrl, businessHours, businessEmail, description, twitterUsername, instagramUsername, facebookUrl, coordinates, logoUrl, posBackgroundUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Location {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    businessName: ").append(toIndentedString(businessName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    businessHours: ").append(toIndentedString(businessHours)).append("\n");
    sb.append("    businessEmail: ").append(toIndentedString(businessEmail)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    twitterUsername: ").append(toIndentedString(twitterUsername)).append("\n");
    sb.append("    instagramUsername: ").append(toIndentedString(instagramUsername)).append("\n");
    sb.append("    facebookUrl: ").append(toIndentedString(facebookUrl)).append("\n");
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    posBackgroundUrl: ").append(toIndentedString(posBackgroundUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

