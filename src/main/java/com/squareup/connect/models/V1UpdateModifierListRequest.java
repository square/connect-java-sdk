/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * V1UpdateModifierListRequest
 */

public class V1UpdateModifierListRequest {
  @JsonProperty("name")
  private String name = null;

  /**
   * Indicates whether multiple options from the modifier list can be applied to a single item.
   */
  public enum SelectionTypeEnum {
    SINGLE("SINGLE"),
    
    MULTIPLE("MULTIPLE");

    private String value;

    SelectionTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SelectionTypeEnum fromValue(String text) {
      for (SelectionTypeEnum b : SelectionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("selection_type")
  private SelectionTypeEnum selectionType = null;

  public V1UpdateModifierListRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The modifier list's name.
   * @return name
  **/
  @ApiModelProperty(value = "The modifier list's name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1UpdateModifierListRequest selectionType(SelectionTypeEnum selectionType) {
    this.selectionType = selectionType;
    return this;
  }

   /**
   * Indicates whether multiple options from the modifier list can be applied to a single item.
   * @return selectionType
  **/
  @ApiModelProperty(value = "Indicates whether multiple options from the modifier list can be applied to a single item.")
  public SelectionTypeEnum getSelectionType() {
    return selectionType;
  }

  public void setSelectionType(SelectionTypeEnum selectionType) {
    this.selectionType = selectionType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1UpdateModifierListRequest v1UpdateModifierListRequest = (V1UpdateModifierListRequest) o;
    return Objects.equals(this.name, v1UpdateModifierListRequest.name) &&
        Objects.equals(this.selectionType, v1UpdateModifierListRequest.selectionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, selectionType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1UpdateModifierListRequest {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    selectionType: ").append(toIndentedString(selectionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

