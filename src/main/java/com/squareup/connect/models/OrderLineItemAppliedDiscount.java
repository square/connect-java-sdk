/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.Money;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Represents an applied portion of a discount to a line item in an order.  Order scoped discounts will automatically have applied discounts present for each line item. Line item scoped discounts must have applied discounts added manually for any applicable line items. The corresponding applied money will automatically be computed based on participating line items.
 */
@ApiModel(description = "Represents an applied portion of a discount to a line item in an order.  Order scoped discounts will automatically have applied discounts present for each line item. Line item scoped discounts must have applied discounts added manually for any applicable line items. The corresponding applied money will automatically be computed based on participating line items.")

public class OrderLineItemAppliedDiscount {
  @JsonProperty("uid")
  private String uid = null;

  @JsonProperty("discount_uid")
  private String discountUid = null;

  @JsonProperty("applied_money")
  private Money appliedMoney = null;

  public OrderLineItemAppliedDiscount uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Unique ID that identifies the applied discount only within this order.
   * @return uid
  **/
  @ApiModelProperty(value = "Unique ID that identifies the applied discount only within this order.")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public OrderLineItemAppliedDiscount discountUid(String discountUid) {
    this.discountUid = discountUid;
    return this;
  }

   /**
   * The `uid` of the discount the applied discount represents. Must reference a discount present in the `order.discounts` field.  This field is immutable. To change which discounts apply to a line item, you must delete the discount and re-add it as a new `OrderLineItemAppliedDiscount`.
   * @return discountUid
  **/
  @ApiModelProperty(required = true, value = "The `uid` of the discount the applied discount represents. Must reference a discount present in the `order.discounts` field.  This field is immutable. To change which discounts apply to a line item, you must delete the discount and re-add it as a new `OrderLineItemAppliedDiscount`.")
  public String getDiscountUid() {
    return discountUid;
  }

  public void setDiscountUid(String discountUid) {
    this.discountUid = discountUid;
  }

  public OrderLineItemAppliedDiscount appliedMoney(Money appliedMoney) {
    this.appliedMoney = appliedMoney;
    return this;
  }

   /**
   * The amount of money applied by the discount to the line item.
   * @return appliedMoney
  **/
  @ApiModelProperty(value = "The amount of money applied by the discount to the line item.")
  public Money getAppliedMoney() {
    return appliedMoney;
  }

  public void setAppliedMoney(Money appliedMoney) {
    this.appliedMoney = appliedMoney;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderLineItemAppliedDiscount orderLineItemAppliedDiscount = (OrderLineItemAppliedDiscount) o;
    return Objects.equals(this.uid, orderLineItemAppliedDiscount.uid) &&
        Objects.equals(this.discountUid, orderLineItemAppliedDiscount.discountUid) &&
        Objects.equals(this.appliedMoney, orderLineItemAppliedDiscount.appliedMoney);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uid, discountUid, appliedMoney);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderLineItemAppliedDiscount {\n");
    
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    discountUid: ").append(toIndentedString(discountUid)).append("\n");
    sb.append("    appliedMoney: ").append(toIndentedString(appliedMoney)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

