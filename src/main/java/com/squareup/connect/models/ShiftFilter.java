/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.ShiftWorkday;
import com.squareup.connect.models.TimeRange;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Defines a filter used in a search for &#x60;Shift&#x60; records. &#x60;AND&#x60; logic is used by Square&#39;s servers to apply each filter property specified.
 */
@ApiModel(description = "Defines a filter used in a search for `Shift` records. `AND` logic is used by Square's servers to apply each filter property specified.")

public class ShiftFilter {
  @JsonProperty("location_id")
  private List<String> locationId = new ArrayList<String>();

  @JsonProperty("employee_id")
  private List<String> employeeId = new ArrayList<String>();

  /**
   * Fetch a `Shift` instance by `Shift.status`. See [ShiftFilterStatus](#type-shiftfilterstatus) for possible values
   */
  public enum StatusEnum {
    OPEN("OPEN"),
    
    CLOSED("CLOSED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("start")
  private TimeRange start = null;

  @JsonProperty("end")
  private TimeRange end = null;

  @JsonProperty("workday")
  private ShiftWorkday workday = null;

  public ShiftFilter locationId(List<String> locationId) {
    this.locationId = locationId;
    return this;
  }

  public ShiftFilter addLocationIdItem(String locationIdItem) {
    this.locationId.add(locationIdItem);
    return this;
  }

   /**
   * Fetch shifts for the specified location.
   * @return locationId
  **/
  @ApiModelProperty(value = "Fetch shifts for the specified location.")
  public List<String> getLocationId() {
    return locationId;
  }

  public void setLocationId(List<String> locationId) {
    this.locationId = locationId;
  }

  public ShiftFilter employeeId(List<String> employeeId) {
    this.employeeId = employeeId;
    return this;
  }

  public ShiftFilter addEmployeeIdItem(String employeeIdItem) {
    this.employeeId.add(employeeIdItem);
    return this;
  }

   /**
   * Fetch shifts for the specified employee.
   * @return employeeId
  **/
  @ApiModelProperty(value = "Fetch shifts for the specified employee.")
  public List<String> getEmployeeId() {
    return employeeId;
  }

  public void setEmployeeId(List<String> employeeId) {
    this.employeeId = employeeId;
  }

  public ShiftFilter status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Fetch a `Shift` instance by `Shift.status`. See [ShiftFilterStatus](#type-shiftfilterstatus) for possible values
   * @return status
  **/
  @ApiModelProperty(value = "Fetch a `Shift` instance by `Shift.status`. See [ShiftFilterStatus](#type-shiftfilterstatus) for possible values")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ShiftFilter start(TimeRange start) {
    this.start = start;
    return this;
  }

   /**
   * Fetch `Shift`s that start in the time range - Inclusive.
   * @return start
  **/
  @ApiModelProperty(value = "Fetch `Shift`s that start in the time range - Inclusive.")
  public TimeRange getStart() {
    return start;
  }

  public void setStart(TimeRange start) {
    this.start = start;
  }

  public ShiftFilter end(TimeRange end) {
    this.end = end;
    return this;
  }

   /**
   * Fetch the `Shift`s that end in the time range - Inclusive.
   * @return end
  **/
  @ApiModelProperty(value = "Fetch the `Shift`s that end in the time range - Inclusive.")
  public TimeRange getEnd() {
    return end;
  }

  public void setEnd(TimeRange end) {
    this.end = end;
  }

  public ShiftFilter workday(ShiftWorkday workday) {
    this.workday = workday;
    return this;
  }

   /**
   * Fetch the `Shift`s based on workday date range.
   * @return workday
  **/
  @ApiModelProperty(value = "Fetch the `Shift`s based on workday date range.")
  public ShiftWorkday getWorkday() {
    return workday;
  }

  public void setWorkday(ShiftWorkday workday) {
    this.workday = workday;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShiftFilter shiftFilter = (ShiftFilter) o;
    return Objects.equals(this.locationId, shiftFilter.locationId) &&
        Objects.equals(this.employeeId, shiftFilter.employeeId) &&
        Objects.equals(this.status, shiftFilter.status) &&
        Objects.equals(this.start, shiftFilter.start) &&
        Objects.equals(this.end, shiftFilter.end) &&
        Objects.equals(this.workday, shiftFilter.workday);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationId, employeeId, status, start, end, workday);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShiftFilter {\n");
    
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    workday: ").append(toIndentedString(workday)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

