/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.Money;
import com.squareup.connect.models.OrderLineItemAppliedTax;
import com.squareup.connect.models.OrderReturnTax;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents the service charge applied to the original order.
 */
@ApiModel(description = "Represents the service charge applied to the original order.")

public class OrderReturnServiceCharge {
  @JsonProperty("uid")
  private String uid = null;

  @JsonProperty("source_service_charge_uid")
  private String sourceServiceChargeUid = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("catalog_object_id")
  private String catalogObjectId = null;

  @JsonProperty("percentage")
  private String percentage = null;

  @JsonProperty("amount_money")
  private Money amountMoney = null;

  @JsonProperty("applied_money")
  private Money appliedMoney = null;

  @JsonProperty("total_money")
  private Money totalMoney = null;

  @JsonProperty("total_tax_money")
  private Money totalTaxMoney = null;

  @JsonProperty("calculation_phase")
  private String calculationPhase = null;

  @JsonProperty("taxable")
  private Boolean taxable = null;

  @JsonProperty("return_taxes")
  private List<OrderReturnTax> returnTaxes = new ArrayList<OrderReturnTax>();

  @JsonProperty("applied_taxes")
  private List<OrderLineItemAppliedTax> appliedTaxes = new ArrayList<OrderLineItemAppliedTax>();

  public OrderReturnServiceCharge uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Unique ID that identifies the return service charge only within this order.
   * @return uid
  **/
  @ApiModelProperty(value = "Unique ID that identifies the return service charge only within this order.")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public OrderReturnServiceCharge sourceServiceChargeUid(String sourceServiceChargeUid) {
    this.sourceServiceChargeUid = sourceServiceChargeUid;
    return this;
  }

   /**
   * `uid` of the Service Charge from the Order containing the original charge of the service charge. `source_service_charge_uid` is `null` for unlinked returns.
   * @return sourceServiceChargeUid
  **/
  @ApiModelProperty(value = "`uid` of the Service Charge from the Order containing the original charge of the service charge. `source_service_charge_uid` is `null` for unlinked returns.")
  public String getSourceServiceChargeUid() {
    return sourceServiceChargeUid;
  }

  public void setSourceServiceChargeUid(String sourceServiceChargeUid) {
    this.sourceServiceChargeUid = sourceServiceChargeUid;
  }

  public OrderReturnServiceCharge name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the service charge.
   * @return name
  **/
  @ApiModelProperty(value = "The name of the service charge.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public OrderReturnServiceCharge catalogObjectId(String catalogObjectId) {
    this.catalogObjectId = catalogObjectId;
    return this;
  }

   /**
   * The catalog object ID of the associated [CatalogServiceCharge](#type-catalogservicecharge).
   * @return catalogObjectId
  **/
  @ApiModelProperty(value = "The catalog object ID of the associated [CatalogServiceCharge](#type-catalogservicecharge).")
  public String getCatalogObjectId() {
    return catalogObjectId;
  }

  public void setCatalogObjectId(String catalogObjectId) {
    this.catalogObjectId = catalogObjectId;
  }

  public OrderReturnServiceCharge percentage(String percentage) {
    this.percentage = percentage;
    return this;
  }

   /**
   * The percentage of the service charge, as a string representation of a decimal number. For example, a value of `\"7.25\"` corresponds to a percentage of 7.25%.  Exactly one of `percentage` or `amount_money` should be set.
   * @return percentage
  **/
  @ApiModelProperty(value = "The percentage of the service charge, as a string representation of a decimal number. For example, a value of `\"7.25\"` corresponds to a percentage of 7.25%.  Exactly one of `percentage` or `amount_money` should be set.")
  public String getPercentage() {
    return percentage;
  }

  public void setPercentage(String percentage) {
    this.percentage = percentage;
  }

  public OrderReturnServiceCharge amountMoney(Money amountMoney) {
    this.amountMoney = amountMoney;
    return this;
  }

   /**
   * The amount of a non-percentage based service charge.  Exactly one of `percentage` or `amount_money` should be set.
   * @return amountMoney
  **/
  @ApiModelProperty(value = "The amount of a non-percentage based service charge.  Exactly one of `percentage` or `amount_money` should be set.")
  public Money getAmountMoney() {
    return amountMoney;
  }

  public void setAmountMoney(Money amountMoney) {
    this.amountMoney = amountMoney;
  }

  public OrderReturnServiceCharge appliedMoney(Money appliedMoney) {
    this.appliedMoney = appliedMoney;
    return this;
  }

   /**
   * The amount of money applied to the order by the service charge, including any inclusive tax amounts, as calculated by Square.  - For fixed-amount service charges, `applied_money` is equal to `amount_money`. - For percentage-based service charges, `applied_money` is the money calculated using the percentage.
   * @return appliedMoney
  **/
  @ApiModelProperty(value = "The amount of money applied to the order by the service charge, including any inclusive tax amounts, as calculated by Square.  - For fixed-amount service charges, `applied_money` is equal to `amount_money`. - For percentage-based service charges, `applied_money` is the money calculated using the percentage.")
  public Money getAppliedMoney() {
    return appliedMoney;
  }

  public void setAppliedMoney(Money appliedMoney) {
    this.appliedMoney = appliedMoney;
  }

  public OrderReturnServiceCharge totalMoney(Money totalMoney) {
    this.totalMoney = totalMoney;
    return this;
  }

   /**
   * The total amount of money to collect for the service charge.  __NOTE__: if an inclusive tax is applied to the service charge, `total_money` does not equal `applied_money` plus `total_tax_money` since the inclusive tax amount will already be included in both `applied_money` and `total_tax_money`.
   * @return totalMoney
  **/
  @ApiModelProperty(value = "The total amount of money to collect for the service charge.  __NOTE__: if an inclusive tax is applied to the service charge, `total_money` does not equal `applied_money` plus `total_tax_money` since the inclusive tax amount will already be included in both `applied_money` and `total_tax_money`.")
  public Money getTotalMoney() {
    return totalMoney;
  }

  public void setTotalMoney(Money totalMoney) {
    this.totalMoney = totalMoney;
  }

  public OrderReturnServiceCharge totalTaxMoney(Money totalTaxMoney) {
    this.totalTaxMoney = totalTaxMoney;
    return this;
  }

   /**
   * The total amount of tax money to collect for the service charge.
   * @return totalTaxMoney
  **/
  @ApiModelProperty(value = "The total amount of tax money to collect for the service charge.")
  public Money getTotalTaxMoney() {
    return totalTaxMoney;
  }

  public void setTotalTaxMoney(Money totalTaxMoney) {
    this.totalTaxMoney = totalTaxMoney;
  }

  public OrderReturnServiceCharge calculationPhase(String calculationPhase) {
    this.calculationPhase = calculationPhase;
    return this;
  }

   /**
   * The calculation phase after which to apply the service charge. See [OrderServiceChargeCalculationPhase](#type-orderservicechargecalculationphase) for possible values
   * @return calculationPhase
  **/
  @ApiModelProperty(value = "The calculation phase after which to apply the service charge. See [OrderServiceChargeCalculationPhase](#type-orderservicechargecalculationphase) for possible values")
  public String getCalculationPhase() {
    return calculationPhase;
  }

  public void setCalculationPhase(String calculationPhase) {
    this.calculationPhase = calculationPhase;
  }

  public OrderReturnServiceCharge taxable(Boolean taxable) {
    this.taxable = taxable;
    return this;
  }

   /**
   * Indicates whether the surcharge can be taxed. Service charges calculated in the `TOTAL_PHASE` cannot be marked as taxable.
   * @return taxable
  **/
  @ApiModelProperty(value = "Indicates whether the surcharge can be taxed. Service charges calculated in the `TOTAL_PHASE` cannot be marked as taxable.")
  public Boolean getTaxable() {
    return taxable;
  }

  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }

  public OrderReturnServiceCharge returnTaxes(List<OrderReturnTax> returnTaxes) {
    this.returnTaxes = returnTaxes;
    return this;
  }

  public OrderReturnServiceCharge addReturnTaxesItem(OrderReturnTax returnTaxesItem) {
    this.returnTaxes.add(returnTaxesItem);
    return this;
  }

   /**
   * Taxes applied to the `OrderReturnServiceCharge`. By default, return-level taxes apply to `OrderReturnServiceCharge`s calculated in the `SUBTOTAL_PHASE` if `taxable` is set to `true`.  On read or retrieve, this list includes both item-level taxes and any return-level taxes apportioned to this item.  This field has been deprecated in favour of `applied_taxes`.
   * @return returnTaxes
  **/
  @ApiModelProperty(value = "Taxes applied to the `OrderReturnServiceCharge`. By default, return-level taxes apply to `OrderReturnServiceCharge`s calculated in the `SUBTOTAL_PHASE` if `taxable` is set to `true`.  On read or retrieve, this list includes both item-level taxes and any return-level taxes apportioned to this item.  This field has been deprecated in favour of `applied_taxes`.")
  public List<OrderReturnTax> getReturnTaxes() {
    return returnTaxes;
  }

  public void setReturnTaxes(List<OrderReturnTax> returnTaxes) {
    this.returnTaxes = returnTaxes;
  }

  public OrderReturnServiceCharge appliedTaxes(List<OrderLineItemAppliedTax> appliedTaxes) {
    this.appliedTaxes = appliedTaxes;
    return this;
  }

  public OrderReturnServiceCharge addAppliedTaxesItem(OrderLineItemAppliedTax appliedTaxesItem) {
    this.appliedTaxes.add(appliedTaxesItem);
    return this;
  }

   /**
   * The list of references to `OrderReturnTax` entities applied to the `OrderReturnServiceCharge`. Each `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level `OrderReturnTax` that is being applied to the `OrderReturnServiceCharge`. On reads, the amount applied is populated.
   * @return appliedTaxes
  **/
  @ApiModelProperty(value = "The list of references to `OrderReturnTax` entities applied to the `OrderReturnServiceCharge`. Each `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level `OrderReturnTax` that is being applied to the `OrderReturnServiceCharge`. On reads, the amount applied is populated.")
  public List<OrderLineItemAppliedTax> getAppliedTaxes() {
    return appliedTaxes;
  }

  public void setAppliedTaxes(List<OrderLineItemAppliedTax> appliedTaxes) {
    this.appliedTaxes = appliedTaxes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderReturnServiceCharge orderReturnServiceCharge = (OrderReturnServiceCharge) o;
    return Objects.equals(this.uid, orderReturnServiceCharge.uid) &&
        Objects.equals(this.sourceServiceChargeUid, orderReturnServiceCharge.sourceServiceChargeUid) &&
        Objects.equals(this.name, orderReturnServiceCharge.name) &&
        Objects.equals(this.catalogObjectId, orderReturnServiceCharge.catalogObjectId) &&
        Objects.equals(this.percentage, orderReturnServiceCharge.percentage) &&
        Objects.equals(this.amountMoney, orderReturnServiceCharge.amountMoney) &&
        Objects.equals(this.appliedMoney, orderReturnServiceCharge.appliedMoney) &&
        Objects.equals(this.totalMoney, orderReturnServiceCharge.totalMoney) &&
        Objects.equals(this.totalTaxMoney, orderReturnServiceCharge.totalTaxMoney) &&
        Objects.equals(this.calculationPhase, orderReturnServiceCharge.calculationPhase) &&
        Objects.equals(this.taxable, orderReturnServiceCharge.taxable) &&
        Objects.equals(this.returnTaxes, orderReturnServiceCharge.returnTaxes) &&
        Objects.equals(this.appliedTaxes, orderReturnServiceCharge.appliedTaxes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uid, sourceServiceChargeUid, name, catalogObjectId, percentage, amountMoney, appliedMoney, totalMoney, totalTaxMoney, calculationPhase, taxable, returnTaxes, appliedTaxes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderReturnServiceCharge {\n");
    
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    sourceServiceChargeUid: ").append(toIndentedString(sourceServiceChargeUid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    catalogObjectId: ").append(toIndentedString(catalogObjectId)).append("\n");
    sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
    sb.append("    amountMoney: ").append(toIndentedString(amountMoney)).append("\n");
    sb.append("    appliedMoney: ").append(toIndentedString(appliedMoney)).append("\n");
    sb.append("    totalMoney: ").append(toIndentedString(totalMoney)).append("\n");
    sb.append("    totalTaxMoney: ").append(toIndentedString(totalTaxMoney)).append("\n");
    sb.append("    calculationPhase: ").append(toIndentedString(calculationPhase)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    returnTaxes: ").append(toIndentedString(returnTaxes)).append("\n");
    sb.append("    appliedTaxes: ").append(toIndentedString(appliedTaxes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

