/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.InventoryAdjustment;
import com.squareup.connect.models.InventoryPhysicalCount;
import com.squareup.connect.models.InventoryTransfer;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Represents a single physical count, inventory, adjustment, or transfer that is part of the history of inventory changes for a particular [CatalogObject](#type-catalogobject).
 */
@ApiModel(description = "Represents a single physical count, inventory, adjustment, or transfer that is part of the history of inventory changes for a particular [CatalogObject](#type-catalogobject).")

public class InventoryChange {
  /**
   * Indicates how the inventory change was applied. See [InventoryChangeType](#type-inventorychangetype) for all possible values.
   */
  public enum TypeEnum {
    PHYSICAL_COUNT("PHYSICAL_COUNT"),
    
    ADJUSTMENT("ADJUSTMENT"),
    
    TRANSFER("TRANSFER");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("physical_count")
  private InventoryPhysicalCount physicalCount = null;

  @JsonProperty("adjustment")
  private InventoryAdjustment adjustment = null;

  @JsonProperty("transfer")
  private InventoryTransfer transfer = null;

  public InventoryChange type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Indicates how the inventory change was applied. See [InventoryChangeType](#type-inventorychangetype) for all possible values.
   * @return type
  **/
  @ApiModelProperty(value = "Indicates how the inventory change was applied. See [InventoryChangeType](#type-inventorychangetype) for all possible values.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public InventoryChange physicalCount(InventoryPhysicalCount physicalCount) {
    this.physicalCount = physicalCount;
    return this;
  }

   /**
   * Contains details about the physical count when `type` is `PHYSICAL_COUNT` and unset for all other types.
   * @return physicalCount
  **/
  @ApiModelProperty(value = "Contains details about the physical count when `type` is `PHYSICAL_COUNT` and unset for all other types.")
  public InventoryPhysicalCount getPhysicalCount() {
    return physicalCount;
  }

  public void setPhysicalCount(InventoryPhysicalCount physicalCount) {
    this.physicalCount = physicalCount;
  }

  public InventoryChange adjustment(InventoryAdjustment adjustment) {
    this.adjustment = adjustment;
    return this;
  }

   /**
   * Contains details about the inventory adjustment when `type` is `ADJUSTMENT` and unset for all other types.
   * @return adjustment
  **/
  @ApiModelProperty(value = "Contains details about the inventory adjustment when `type` is `ADJUSTMENT` and unset for all other types.")
  public InventoryAdjustment getAdjustment() {
    return adjustment;
  }

  public void setAdjustment(InventoryAdjustment adjustment) {
    this.adjustment = adjustment;
  }

  public InventoryChange transfer(InventoryTransfer transfer) {
    this.transfer = transfer;
    return this;
  }

   /**
   * Contains details about the inventory transfer when `type` is `TRANSFER` and unset for all other types.
   * @return transfer
  **/
  @ApiModelProperty(value = "Contains details about the inventory transfer when `type` is `TRANSFER` and unset for all other types.")
  public InventoryTransfer getTransfer() {
    return transfer;
  }

  public void setTransfer(InventoryTransfer transfer) {
    this.transfer = transfer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryChange inventoryChange = (InventoryChange) o;
    return Objects.equals(this.type, inventoryChange.type) &&
        Objects.equals(this.physicalCount, inventoryChange.physicalCount) &&
        Objects.equals(this.adjustment, inventoryChange.adjustment) &&
        Objects.equals(this.transfer, inventoryChange.transfer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, physicalCount, adjustment, transfer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryChange {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    physicalCount: ").append(toIndentedString(physicalCount)).append("\n");
    sb.append("    adjustment: ").append(toIndentedString(adjustment)).append("\n");
    sb.append("    transfer: ").append(toIndentedString(transfer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

